//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Trevali.Server.Reports.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsWeeklyAnalysis")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsWeeklyAnalysis : global::System.Data.DataSet {
        
        private RPT_WeeklyAnalysisReportDataTable tableRPT_WeeklyAnalysisReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public dsWeeklyAnalysis() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected dsWeeklyAnalysis(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RPT_WeeklyAnalysisReport"] != null)) {
                    base.Tables.Add(new RPT_WeeklyAnalysisReportDataTable(ds.Tables["RPT_WeeklyAnalysisReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RPT_WeeklyAnalysisReportDataTable RPT_WeeklyAnalysisReport {
            get {
                return this.tableRPT_WeeklyAnalysisReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsWeeklyAnalysis cln = ((dsWeeklyAnalysis)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RPT_WeeklyAnalysisReport"] != null)) {
                    base.Tables.Add(new RPT_WeeklyAnalysisReportDataTable(ds.Tables["RPT_WeeklyAnalysisReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableRPT_WeeklyAnalysisReport = ((RPT_WeeklyAnalysisReportDataTable)(base.Tables["RPT_WeeklyAnalysisReport"]));
            if ((initTable == true)) {
                if ((this.tableRPT_WeeklyAnalysisReport != null)) {
                    this.tableRPT_WeeklyAnalysisReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsWeeklyAnalysis";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsWeeklyAnalysis.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRPT_WeeklyAnalysisReport = new RPT_WeeklyAnalysisReportDataTable();
            base.Tables.Add(this.tableRPT_WeeklyAnalysisReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeRPT_WeeklyAnalysisReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsWeeklyAnalysis ds = new dsWeeklyAnalysis();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void RPT_WeeklyAnalysisReportRowChangeEventHandler(object sender, RPT_WeeklyAnalysisReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RPT_WeeklyAnalysisReportDataTable : global::System.Data.TypedTableBase<RPT_WeeklyAnalysisReportRow> {
            
            private global::System.Data.DataColumn columnMetricId;
            
            private global::System.Data.DataColumn columnSectionId;
            
            private global::System.Data.DataColumn columnSectionName;
            
            private global::System.Data.DataColumn columnMetricsName;
            
            private global::System.Data.DataColumn columnWeek;
            
            private global::System.Data.DataColumn columnMonth;
            
            private global::System.Data.DataColumn columnYear;
            
            private global::System.Data.DataColumn columnYearYY;
            
            private global::System.Data.DataColumn columnActualValue;
            
            private global::System.Data.DataColumn columnMTDValue;
            
            private global::System.Data.DataColumn columnJanuaryActual;
            
            private global::System.Data.DataColumn columnFebruaryActual;
            
            private global::System.Data.DataColumn columnMarchActual;
            
            private global::System.Data.DataColumn columnAprilActual;
            
            private global::System.Data.DataColumn columnMayActual;
            
            private global::System.Data.DataColumn columnJuneActual;
            
            private global::System.Data.DataColumn columnJulyActual;
            
            private global::System.Data.DataColumn columnAugustActual;
            
            private global::System.Data.DataColumn columnSeptemberActual;
            
            private global::System.Data.DataColumn columnOctoberActual;
            
            private global::System.Data.DataColumn columnNovemberActual;
            
            private global::System.Data.DataColumn columnDecemberActual;
            
            private global::System.Data.DataColumn columnYTD;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnFullYearForecast;
            
            private global::System.Data.DataColumn columnJanuaryForecast;
            
            private global::System.Data.DataColumn columnFebruaryForecast;
            
            private global::System.Data.DataColumn columnMarchForecast;
            
            private global::System.Data.DataColumn columnAprilForecast;
            
            private global::System.Data.DataColumn columnMayForecast;
            
            private global::System.Data.DataColumn columnJuneForecast;
            
            private global::System.Data.DataColumn columnJulyForecast;
            
            private global::System.Data.DataColumn columnAugustForecast;
            
            private global::System.Data.DataColumn columnSeptemberForecast;
            
            private global::System.Data.DataColumn columnOctoberForecast;
            
            private global::System.Data.DataColumn columnNovemberForecast;
            
            private global::System.Data.DataColumn columnDecemberForecast;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RPT_WeeklyAnalysisReportDataTable() {
                this.TableName = "RPT_WeeklyAnalysisReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal RPT_WeeklyAnalysisReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected RPT_WeeklyAnalysisReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MetricIdColumn {
                get {
                    return this.columnMetricId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SectionIdColumn {
                get {
                    return this.columnSectionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SectionNameColumn {
                get {
                    return this.columnSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MetricsNameColumn {
                get {
                    return this.columnMetricsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeekColumn {
                get {
                    return this.columnWeek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YearYYColumn {
                get {
                    return this.columnYearYY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActualValueColumn {
                get {
                    return this.columnActualValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MTDValueColumn {
                get {
                    return this.columnMTDValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JanuaryActualColumn {
                get {
                    return this.columnJanuaryActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FebruaryActualColumn {
                get {
                    return this.columnFebruaryActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarchActualColumn {
                get {
                    return this.columnMarchActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AprilActualColumn {
                get {
                    return this.columnAprilActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MayActualColumn {
                get {
                    return this.columnMayActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JuneActualColumn {
                get {
                    return this.columnJuneActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JulyActualColumn {
                get {
                    return this.columnJulyActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AugustActualColumn {
                get {
                    return this.columnAugustActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeptemberActualColumn {
                get {
                    return this.columnSeptemberActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OctoberActualColumn {
                get {
                    return this.columnOctoberActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NovemberActualColumn {
                get {
                    return this.columnNovemberActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DecemberActualColumn {
                get {
                    return this.columnDecemberActual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YTDColumn {
                get {
                    return this.columnYTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FullYearForecastColumn {
                get {
                    return this.columnFullYearForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JanuaryForecastColumn {
                get {
                    return this.columnJanuaryForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FebruaryForecastColumn {
                get {
                    return this.columnFebruaryForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarchForecastColumn {
                get {
                    return this.columnMarchForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AprilForecastColumn {
                get {
                    return this.columnAprilForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MayForecastColumn {
                get {
                    return this.columnMayForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JuneForecastColumn {
                get {
                    return this.columnJuneForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JulyForecastColumn {
                get {
                    return this.columnJulyForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AugustForecastColumn {
                get {
                    return this.columnAugustForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeptemberForecastColumn {
                get {
                    return this.columnSeptemberForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OctoberForecastColumn {
                get {
                    return this.columnOctoberForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NovemberForecastColumn {
                get {
                    return this.columnNovemberForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DecemberForecastColumn {
                get {
                    return this.columnDecemberForecast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RPT_WeeklyAnalysisReportRow this[int index] {
                get {
                    return ((RPT_WeeklyAnalysisReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event RPT_WeeklyAnalysisReportRowChangeEventHandler RPT_WeeklyAnalysisReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event RPT_WeeklyAnalysisReportRowChangeEventHandler RPT_WeeklyAnalysisReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event RPT_WeeklyAnalysisReportRowChangeEventHandler RPT_WeeklyAnalysisReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event RPT_WeeklyAnalysisReportRowChangeEventHandler RPT_WeeklyAnalysisReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddRPT_WeeklyAnalysisReportRow(RPT_WeeklyAnalysisReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RPT_WeeklyAnalysisReportRow AddRPT_WeeklyAnalysisReportRow(
                        int MetricId, 
                        int SectionId, 
                        string SectionName, 
                        string MetricsName, 
                        int Week, 
                        string Month, 
                        int Year, 
                        string YearYY, 
                        decimal ActualValue, 
                        decimal MTDValue, 
                        decimal JanuaryActual, 
                        decimal FebruaryActual, 
                        decimal MarchActual, 
                        decimal AprilActual, 
                        decimal MayActual, 
                        decimal JuneActual, 
                        decimal JulyActual, 
                        decimal AugustActual, 
                        decimal SeptemberActual, 
                        decimal OctoberActual, 
                        decimal NovemberActual, 
                        decimal DecemberActual, 
                        decimal YTD, 
                        string Comment, 
                        decimal FullYearForecast, 
                        decimal JanuaryForecast, 
                        decimal FebruaryForecast, 
                        decimal MarchForecast, 
                        decimal AprilForecast, 
                        decimal MayForecast, 
                        decimal JuneForecast, 
                        decimal JulyForecast, 
                        decimal AugustForecast, 
                        decimal SeptemberForecast, 
                        decimal OctoberForecast, 
                        decimal NovemberForecast, 
                        decimal DecemberForecast) {
                RPT_WeeklyAnalysisReportRow rowRPT_WeeklyAnalysisReportRow = ((RPT_WeeklyAnalysisReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MetricId,
                        SectionId,
                        SectionName,
                        MetricsName,
                        Week,
                        Month,
                        Year,
                        YearYY,
                        ActualValue,
                        MTDValue,
                        JanuaryActual,
                        FebruaryActual,
                        MarchActual,
                        AprilActual,
                        MayActual,
                        JuneActual,
                        JulyActual,
                        AugustActual,
                        SeptemberActual,
                        OctoberActual,
                        NovemberActual,
                        DecemberActual,
                        YTD,
                        Comment,
                        FullYearForecast,
                        JanuaryForecast,
                        FebruaryForecast,
                        MarchForecast,
                        AprilForecast,
                        MayForecast,
                        JuneForecast,
                        JulyForecast,
                        AugustForecast,
                        SeptemberForecast,
                        OctoberForecast,
                        NovemberForecast,
                        DecemberForecast};
                rowRPT_WeeklyAnalysisReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRPT_WeeklyAnalysisReportRow);
                return rowRPT_WeeklyAnalysisReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RPT_WeeklyAnalysisReportDataTable cln = ((RPT_WeeklyAnalysisReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RPT_WeeklyAnalysisReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnMetricId = base.Columns["MetricId"];
                this.columnSectionId = base.Columns["SectionId"];
                this.columnSectionName = base.Columns["SectionName"];
                this.columnMetricsName = base.Columns["MetricsName"];
                this.columnWeek = base.Columns["Week"];
                this.columnMonth = base.Columns["Month"];
                this.columnYear = base.Columns["Year"];
                this.columnYearYY = base.Columns["YearYY"];
                this.columnActualValue = base.Columns["ActualValue"];
                this.columnMTDValue = base.Columns["MTDValue"];
                this.columnJanuaryActual = base.Columns["JanuaryActual"];
                this.columnFebruaryActual = base.Columns["FebruaryActual"];
                this.columnMarchActual = base.Columns["MarchActual"];
                this.columnAprilActual = base.Columns["AprilActual"];
                this.columnMayActual = base.Columns["MayActual"];
                this.columnJuneActual = base.Columns["JuneActual"];
                this.columnJulyActual = base.Columns["JulyActual"];
                this.columnAugustActual = base.Columns["AugustActual"];
                this.columnSeptemberActual = base.Columns["SeptemberActual"];
                this.columnOctoberActual = base.Columns["OctoberActual"];
                this.columnNovemberActual = base.Columns["NovemberActual"];
                this.columnDecemberActual = base.Columns["DecemberActual"];
                this.columnYTD = base.Columns["YTD"];
                this.columnComment = base.Columns["Comment"];
                this.columnFullYearForecast = base.Columns["FullYearForecast"];
                this.columnJanuaryForecast = base.Columns["JanuaryForecast"];
                this.columnFebruaryForecast = base.Columns["FebruaryForecast"];
                this.columnMarchForecast = base.Columns["MarchForecast"];
                this.columnAprilForecast = base.Columns["AprilForecast"];
                this.columnMayForecast = base.Columns["MayForecast"];
                this.columnJuneForecast = base.Columns["JuneForecast"];
                this.columnJulyForecast = base.Columns["JulyForecast"];
                this.columnAugustForecast = base.Columns["AugustForecast"];
                this.columnSeptemberForecast = base.Columns["SeptemberForecast"];
                this.columnOctoberForecast = base.Columns["OctoberForecast"];
                this.columnNovemberForecast = base.Columns["NovemberForecast"];
                this.columnDecemberForecast = base.Columns["DecemberForecast"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnMetricId = new global::System.Data.DataColumn("MetricId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetricId);
                this.columnSectionId = new global::System.Data.DataColumn("SectionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionId);
                this.columnSectionName = new global::System.Data.DataColumn("SectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionName);
                this.columnMetricsName = new global::System.Data.DataColumn("MetricsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetricsName);
                this.columnWeek = new global::System.Data.DataColumn("Week", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeek);
                this.columnMonth = new global::System.Data.DataColumn("Month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnYearYY = new global::System.Data.DataColumn("YearYY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearYY);
                this.columnActualValue = new global::System.Data.DataColumn("ActualValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualValue);
                this.columnMTDValue = new global::System.Data.DataColumn("MTDValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDValue);
                this.columnJanuaryActual = new global::System.Data.DataColumn("JanuaryActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJanuaryActual);
                this.columnFebruaryActual = new global::System.Data.DataColumn("FebruaryActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFebruaryActual);
                this.columnMarchActual = new global::System.Data.DataColumn("MarchActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarchActual);
                this.columnAprilActual = new global::System.Data.DataColumn("AprilActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAprilActual);
                this.columnMayActual = new global::System.Data.DataColumn("MayActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMayActual);
                this.columnJuneActual = new global::System.Data.DataColumn("JuneActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJuneActual);
                this.columnJulyActual = new global::System.Data.DataColumn("JulyActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJulyActual);
                this.columnAugustActual = new global::System.Data.DataColumn("AugustActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAugustActual);
                this.columnSeptemberActual = new global::System.Data.DataColumn("SeptemberActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeptemberActual);
                this.columnOctoberActual = new global::System.Data.DataColumn("OctoberActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOctoberActual);
                this.columnNovemberActual = new global::System.Data.DataColumn("NovemberActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNovemberActual);
                this.columnDecemberActual = new global::System.Data.DataColumn("DecemberActual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecemberActual);
                this.columnYTD = new global::System.Data.DataColumn("YTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTD);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnFullYearForecast = new global::System.Data.DataColumn("FullYearForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullYearForecast);
                this.columnJanuaryForecast = new global::System.Data.DataColumn("JanuaryForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJanuaryForecast);
                this.columnFebruaryForecast = new global::System.Data.DataColumn("FebruaryForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFebruaryForecast);
                this.columnMarchForecast = new global::System.Data.DataColumn("MarchForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarchForecast);
                this.columnAprilForecast = new global::System.Data.DataColumn("AprilForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAprilForecast);
                this.columnMayForecast = new global::System.Data.DataColumn("MayForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMayForecast);
                this.columnJuneForecast = new global::System.Data.DataColumn("JuneForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJuneForecast);
                this.columnJulyForecast = new global::System.Data.DataColumn("JulyForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJulyForecast);
                this.columnAugustForecast = new global::System.Data.DataColumn("AugustForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAugustForecast);
                this.columnSeptemberForecast = new global::System.Data.DataColumn("SeptemberForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeptemberForecast);
                this.columnOctoberForecast = new global::System.Data.DataColumn("OctoberForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOctoberForecast);
                this.columnNovemberForecast = new global::System.Data.DataColumn("NovemberForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNovemberForecast);
                this.columnDecemberForecast = new global::System.Data.DataColumn("DecemberForecast", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecemberForecast);
                this.columnMetricId.AllowDBNull = false;
                this.columnSectionId.AllowDBNull = false;
                this.columnSectionName.AllowDBNull = false;
                this.columnSectionName.MaxLength = 100;
                this.columnMetricsName.ReadOnly = true;
                this.columnMetricsName.MaxLength = 113;
                this.columnWeek.ReadOnly = true;
                this.columnMonth.ReadOnly = true;
                this.columnMonth.MaxLength = 3;
                this.columnYear.ReadOnly = true;
                this.columnYearYY.ReadOnly = true;
                this.columnYearYY.MaxLength = 2;
                this.columnActualValue.ReadOnly = true;
                this.columnMTDValue.ReadOnly = true;
                this.columnJanuaryActual.ReadOnly = true;
                this.columnFebruaryActual.ReadOnly = true;
                this.columnMarchActual.ReadOnly = true;
                this.columnAprilActual.ReadOnly = true;
                this.columnMayActual.ReadOnly = true;
                this.columnJuneActual.ReadOnly = true;
                this.columnJulyActual.ReadOnly = true;
                this.columnAugustActual.ReadOnly = true;
                this.columnSeptemberActual.ReadOnly = true;
                this.columnOctoberActual.ReadOnly = true;
                this.columnNovemberActual.ReadOnly = true;
                this.columnDecemberActual.ReadOnly = true;
                this.columnYTD.ReadOnly = true;
                this.columnComment.MaxLength = 1000;
                this.columnFullYearForecast.ReadOnly = true;
                this.columnJanuaryForecast.ReadOnly = true;
                this.columnFebruaryForecast.ReadOnly = true;
                this.columnMarchForecast.ReadOnly = true;
                this.columnAprilForecast.ReadOnly = true;
                this.columnMayForecast.ReadOnly = true;
                this.columnJuneForecast.ReadOnly = true;
                this.columnJulyForecast.ReadOnly = true;
                this.columnAugustForecast.ReadOnly = true;
                this.columnSeptemberForecast.ReadOnly = true;
                this.columnOctoberForecast.ReadOnly = true;
                this.columnNovemberForecast.ReadOnly = true;
                this.columnDecemberForecast.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RPT_WeeklyAnalysisReportRow NewRPT_WeeklyAnalysisReportRow() {
                return ((RPT_WeeklyAnalysisReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RPT_WeeklyAnalysisReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RPT_WeeklyAnalysisReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RPT_WeeklyAnalysisReportRowChanged != null)) {
                    this.RPT_WeeklyAnalysisReportRowChanged(this, new RPT_WeeklyAnalysisReportRowChangeEvent(((RPT_WeeklyAnalysisReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RPT_WeeklyAnalysisReportRowChanging != null)) {
                    this.RPT_WeeklyAnalysisReportRowChanging(this, new RPT_WeeklyAnalysisReportRowChangeEvent(((RPT_WeeklyAnalysisReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RPT_WeeklyAnalysisReportRowDeleted != null)) {
                    this.RPT_WeeklyAnalysisReportRowDeleted(this, new RPT_WeeklyAnalysisReportRowChangeEvent(((RPT_WeeklyAnalysisReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RPT_WeeklyAnalysisReportRowDeleting != null)) {
                    this.RPT_WeeklyAnalysisReportRowDeleting(this, new RPT_WeeklyAnalysisReportRowChangeEvent(((RPT_WeeklyAnalysisReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveRPT_WeeklyAnalysisReportRow(RPT_WeeklyAnalysisReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsWeeklyAnalysis ds = new dsWeeklyAnalysis();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RPT_WeeklyAnalysisReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RPT_WeeklyAnalysisReportRow : global::System.Data.DataRow {
            
            private RPT_WeeklyAnalysisReportDataTable tableRPT_WeeklyAnalysisReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal RPT_WeeklyAnalysisReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRPT_WeeklyAnalysisReport = ((RPT_WeeklyAnalysisReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int MetricId {
                get {
                    return ((int)(this[this.tableRPT_WeeklyAnalysisReport.MetricIdColumn]));
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.MetricIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SectionId {
                get {
                    return ((int)(this[this.tableRPT_WeeklyAnalysisReport.SectionIdColumn]));
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.SectionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SectionName {
                get {
                    return ((string)(this[this.tableRPT_WeeklyAnalysisReport.SectionNameColumn]));
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.SectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MetricsName {
                get {
                    try {
                        return ((string)(this[this.tableRPT_WeeklyAnalysisReport.MetricsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MetricsName\' in table \'RPT_WeeklyAnalysisReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.MetricsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Week {
                get {
                    try {
                        return ((int)(this[this.tableRPT_WeeklyAnalysisReport.WeekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Week\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.WeekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Month {
                get {
                    try {
                        return ((string)(this[this.tableRPT_WeeklyAnalysisReport.MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Month\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Year {
                get {
                    try {
                        return ((int)(this[this.tableRPT_WeeklyAnalysisReport.YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Year\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string YearYY {
                get {
                    try {
                        return ((string)(this[this.tableRPT_WeeklyAnalysisReport.YearYYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearYY\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.YearYYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ActualValue {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.ActualValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualValue\' in table \'RPT_WeeklyAnalysisReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.ActualValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MTDValue {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.MTDValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTDValue\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.MTDValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JanuaryActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.JanuaryActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JanuaryActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.JanuaryActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal FebruaryActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.FebruaryActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FebruaryActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.FebruaryActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarchActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.MarchActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarchActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.MarchActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AprilActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.AprilActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AprilActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.AprilActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MayActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.MayActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MayActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.MayActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JuneActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.JuneActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JuneActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.JuneActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JulyActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.JulyActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JulyActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.JulyActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AugustActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.AugustActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AugustActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.AugustActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SeptemberActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.SeptemberActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeptemberActual\' in table \'RPT_WeeklyAnalysisReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.SeptemberActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OctoberActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.OctoberActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OctoberActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.OctoberActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NovemberActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.NovemberActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NovemberActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.NovemberActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal DecemberActual {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.DecemberActualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DecemberActual\' in table \'RPT_WeeklyAnalysisReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.DecemberActualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal YTD {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.YTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YTD\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.YTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableRPT_WeeklyAnalysisReport.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'RPT_WeeklyAnalysisReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal FullYearForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.FullYearForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullYearForecast\' in table \'RPT_WeeklyAnalysisReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.FullYearForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JanuaryForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.JanuaryForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JanuaryForecast\' in table \'RPT_WeeklyAnalysisReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.JanuaryForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal FebruaryForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.FebruaryForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FebruaryForecast\' in table \'RPT_WeeklyAnalysisReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.FebruaryForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarchForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.MarchForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarchForecast\' in table \'RPT_WeeklyAnalysisReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.MarchForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AprilForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.AprilForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AprilForecast\' in table \'RPT_WeeklyAnalysisReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.AprilForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MayForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.MayForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MayForecast\' in table \'RPT_WeeklyAnalysisReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.MayForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JuneForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.JuneForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JuneForecast\' in table \'RPT_WeeklyAnalysisReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.JuneForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JulyForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.JulyForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JulyForecast\' in table \'RPT_WeeklyAnalysisReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.JulyForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AugustForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.AugustForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AugustForecast\' in table \'RPT_WeeklyAnalysisReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.AugustForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SeptemberForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.SeptemberForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeptemberForecast\' in table \'RPT_WeeklyAnalysisReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.SeptemberForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OctoberForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.OctoberForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OctoberForecast\' in table \'RPT_WeeklyAnalysisReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.OctoberForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NovemberForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.NovemberForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NovemberForecast\' in table \'RPT_WeeklyAnalysisReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.NovemberForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal DecemberForecast {
                get {
                    try {
                        return ((decimal)(this[this.tableRPT_WeeklyAnalysisReport.DecemberForecastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DecemberForecast\' in table \'RPT_WeeklyAnalysisReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRPT_WeeklyAnalysisReport.DecemberForecastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMetricsNameNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.MetricsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMetricsNameNull() {
                this[this.tableRPT_WeeklyAnalysisReport.MetricsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWeekNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.WeekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWeekNull() {
                this[this.tableRPT_WeeklyAnalysisReport.WeekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMonthNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMonthNull() {
                this[this.tableRPT_WeeklyAnalysisReport.MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsYearNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetYearNull() {
                this[this.tableRPT_WeeklyAnalysisReport.YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsYearYYNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.YearYYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetYearYYNull() {
                this[this.tableRPT_WeeklyAnalysisReport.YearYYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActualValueNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.ActualValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActualValueNull() {
                this[this.tableRPT_WeeklyAnalysisReport.ActualValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMTDValueNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.MTDValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMTDValueNull() {
                this[this.tableRPT_WeeklyAnalysisReport.MTDValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJanuaryActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.JanuaryActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJanuaryActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.JanuaryActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFebruaryActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.FebruaryActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFebruaryActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.FebruaryActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarchActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.MarchActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarchActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.MarchActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAprilActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.AprilActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAprilActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.AprilActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMayActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.MayActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMayActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.MayActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJuneActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.JuneActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJuneActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.JuneActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJulyActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.JulyActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJulyActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.JulyActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAugustActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.AugustActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAugustActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.AugustActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSeptemberActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.SeptemberActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSeptemberActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.SeptemberActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOctoberActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.OctoberActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOctoberActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.OctoberActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNovemberActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.NovemberActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNovemberActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.NovemberActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDecemberActualNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.DecemberActualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDecemberActualNull() {
                this[this.tableRPT_WeeklyAnalysisReport.DecemberActualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsYTDNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.YTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetYTDNull() {
                this[this.tableRPT_WeeklyAnalysisReport.YTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommentNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommentNull() {
                this[this.tableRPT_WeeklyAnalysisReport.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFullYearForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.FullYearForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFullYearForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.FullYearForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJanuaryForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.JanuaryForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJanuaryForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.JanuaryForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFebruaryForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.FebruaryForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFebruaryForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.FebruaryForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarchForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.MarchForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarchForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.MarchForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAprilForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.AprilForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAprilForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.AprilForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMayForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.MayForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMayForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.MayForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJuneForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.JuneForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJuneForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.JuneForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJulyForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.JulyForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJulyForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.JulyForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAugustForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.AugustForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAugustForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.AugustForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSeptemberForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.SeptemberForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSeptemberForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.SeptemberForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOctoberForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.OctoberForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOctoberForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.OctoberForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNovemberForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.NovemberForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNovemberForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.NovemberForecastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDecemberForecastNull() {
                return this.IsNull(this.tableRPT_WeeklyAnalysisReport.DecemberForecastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDecemberForecastNull() {
                this[this.tableRPT_WeeklyAnalysisReport.DecemberForecastColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class RPT_WeeklyAnalysisReportRowChangeEvent : global::System.EventArgs {
            
            private RPT_WeeklyAnalysisReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RPT_WeeklyAnalysisReportRowChangeEvent(RPT_WeeklyAnalysisReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RPT_WeeklyAnalysisReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Trevali.Server.Reports.DataSets.dsWeeklyAnalysisTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RPT_WeeklyAnalysisReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public RPT_WeeklyAnalysisReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RPT_WeeklyAnalysisReport";
            tableMapping.ColumnMappings.Add("MetricId", "MetricId");
            tableMapping.ColumnMappings.Add("SectionId", "SectionId");
            tableMapping.ColumnMappings.Add("SectionName", "SectionName");
            tableMapping.ColumnMappings.Add("MetricsName", "MetricsName");
            tableMapping.ColumnMappings.Add("Week", "Week");
            tableMapping.ColumnMappings.Add("Month", "Month");
            tableMapping.ColumnMappings.Add("Year", "Year");
            tableMapping.ColumnMappings.Add("YearYY", "YearYY");
            tableMapping.ColumnMappings.Add("ActualValue", "ActualValue");
            tableMapping.ColumnMappings.Add("MTDValue", "MTDValue");
            tableMapping.ColumnMappings.Add("JanuaryActual", "JanuaryActual");
            tableMapping.ColumnMappings.Add("FebruaryActual", "FebruaryActual");
            tableMapping.ColumnMappings.Add("MarchActual", "MarchActual");
            tableMapping.ColumnMappings.Add("AprilActual", "AprilActual");
            tableMapping.ColumnMappings.Add("MayActual", "MayActual");
            tableMapping.ColumnMappings.Add("JuneActual", "JuneActual");
            tableMapping.ColumnMappings.Add("JulyActual", "JulyActual");
            tableMapping.ColumnMappings.Add("AugustActual", "AugustActual");
            tableMapping.ColumnMappings.Add("SeptemberActual", "SeptemberActual");
            tableMapping.ColumnMappings.Add("OctoberActual", "OctoberActual");
            tableMapping.ColumnMappings.Add("NovemberActual", "NovemberActual");
            tableMapping.ColumnMappings.Add("DecemberActual", "DecemberActual");
            tableMapping.ColumnMappings.Add("YTD", "YTD");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("FullYearForecast", "FullYearForecast");
            tableMapping.ColumnMappings.Add("JanuaryForecast", "JanuaryForecast");
            tableMapping.ColumnMappings.Add("FebruaryForecast", "FebruaryForecast");
            tableMapping.ColumnMappings.Add("MarchForecast", "MarchForecast");
            tableMapping.ColumnMappings.Add("AprilForecast", "AprilForecast");
            tableMapping.ColumnMappings.Add("MayForecast", "MayForecast");
            tableMapping.ColumnMappings.Add("JuneForecast", "JuneForecast");
            tableMapping.ColumnMappings.Add("JulyForecast", "JulyForecast");
            tableMapping.ColumnMappings.Add("AugustForecast", "AugustForecast");
            tableMapping.ColumnMappings.Add("SeptemberForecast", "SeptemberForecast");
            tableMapping.ColumnMappings.Add("OctoberForecast", "OctoberForecast");
            tableMapping.ColumnMappings.Add("NovemberForecast", "NovemberForecast");
            tableMapping.ColumnMappings.Add("DecemberForecast", "DecemberForecast");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.RPT_WeeklyAnalysisReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiteId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReportId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Week", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Year", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsWeeklyAnalysis.RPT_WeeklyAnalysisReportDataTable dataTable, global::System.Nullable<int> SiteId, global::System.Nullable<int> ReportId, global::System.Nullable<int> Week, global::System.Nullable<int> Year) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SiteId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SiteId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ReportId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ReportId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Week.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(Week.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Year.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(Year.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsWeeklyAnalysis.RPT_WeeklyAnalysisReportDataTable GetData(global::System.Nullable<int> SiteId, global::System.Nullable<int> ReportId, global::System.Nullable<int> Week, global::System.Nullable<int> Year) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SiteId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SiteId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ReportId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ReportId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Week.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(Week.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Year.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(Year.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            dsWeeklyAnalysis.RPT_WeeklyAnalysisReportDataTable dataTable = new dsWeeklyAnalysis.RPT_WeeklyAnalysisReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(dsWeeklyAnalysis dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(dsWeeklyAnalysis dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(dsWeeklyAnalysis dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(dsWeeklyAnalysis dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591